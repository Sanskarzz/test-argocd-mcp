apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: my-canary-app
  namespace: my-apps
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-canary-app
      env: production
  template:
    metadata:
      labels:
        app: my-canary-app
        env: production
    spec:
      containers:
      - name: my-canary-app
        image: sanskardevops/test-application-1:0.0.3
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
  strategy:
    canary:
      maxSurge: 1
      maxUnavailable: 0
      canaryService: my-canary-service
      stableService: my-stable-service
      trafficRouting:
        nginx:
          stableIngress: my-canary-app-ingress
      steps:
      - setWeight: 10
      - pause:
          duration: 60s
      - setWeight: 50
      - pause:
          duration: 60s
      - setWeight: 100
---
apiVersion: v1
kind: Service
metadata:
  name: my-stable-service
  namespace: my-apps
spec:
  clusterIP: 10.96.11.162
  clusterIPs:
  - 10.96.11.162
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: my-canary-app
    env: production
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  name: my-canary-service
  namespace: my-apps
spec:
  clusterIP: 10.96.218.204
  clusterIPs:
  - 10.96.218.204
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: my-canary-app
    env: production
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: my-canary-app-ingress
  namespace: my-apps
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: my-stable-service
            port:
              number: 80
        path: /
        pathType: Prefix
status:
  loadBalancer: {}
